<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2024/09/28/test/"/>
    <url>/2024/09/28/test/</url>
    
    <content type="html"><![CDATA[<h3 id="This-is-a-test-file"><a href="#This-is-a-test-file" class="headerlink" title="This is a test file"></a>This is a test file</h3><p><code>gcloud compute ssh nyu-dataproc-m --project hpc-dataproc-19b8 --zone us-central1-f</code></p><p><code>spark-shell --deploy-mode client</code></p><h1 id="Lab1"><a href="#Lab1" class="headerlink" title="Lab1"></a>Lab1</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">gcloud compute ssh nyu-dataproc-m --project hpc-dataproc-19b8 --zone us-central1-f</span><br><span class="line">hadoop fs -ls /</span><br><span class="line">hadoop fs -ls</span><br><span class="line">hadoop fs -ls /user/yz10317_nyu_edu</span><br><span class="line">hadoop fs -mkdir lab1</span><br><span class="line">hadoop fs -ls</span><br><span class="line">hadoop fs -getfacl lab1</span><br><span class="line">wget https: //www.gutenberg.org/files/1661/1661-0.txt</span><br><span class="line">hadoop fs -put 1661-0.txt lab1/data.txt</span><br><span class="line">hadoop fs -ls lab1</span><br><span class="line">hadoop fs -get lab1/data.txt</span><br><span class="line">diff 1661-0.txt data.txt</span><br><span class="line">hadoop fs -rm -r lab1</span><br><span class="line">hadoop fs -ls</span><br><span class="line">spark-shell --deploy-mode client</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">:help</span><br><span class="line">sc.\tab</span><br><span class="line">sc.version</span><br><span class="line"><span class="keyword">val</span> myConstant: <span class="type">Int</span> = <span class="number">2437</span></span><br><span class="line">myConstant</span><br><span class="line">myConstant.\tab</span><br><span class="line">myConstant.to\tab</span><br><span class="line">myConstant.toFloat</span><br><span class="line">myConstant</span><br><span class="line">myConstant.toFloat.toInt</span><br><span class="line"><span class="keyword">val</span> myString = myConstant.toString</span><br><span class="line">:<span class="class"><span class="keyword">type</span> <span class="title">myString</span></span></span><br><span class="line">:q</span><br></pre></td></tr></table></figure><h1 id="Lab-2"><a href="#Lab-2" class="headerlink" title="Lab 2"></a>Lab 2</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcloud compute ssh nyu-dataproc-m --project hpc-dataproc-19b8 --zone us-central1-f</span><br><span class="line">spark-shell --deploy-mode client</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> exchangeRate: <span class="type">Double</span> = <span class="number">1.04</span></span><br><span class="line"><span class="keyword">val</span> dollars: <span class="type">Int</span> = <span class="number">100.00</span></span><br><span class="line"><span class="keyword">val</span> dollars: <span class="type">Double</span> = <span class="number">100.00</span></span><br><span class="line"><span class="keyword">var</span> euros = <span class="number">0.00</span></span><br><span class="line">euros = dollars * exchangeRate</span><br><span class="line">dollars = <span class="number">500</span></span><br><span class="line"><span class="keyword">val</span> dollars = <span class="number">500</span></span><br><span class="line"><span class="keyword">var</span> eurosInt: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">eurosInt = dollars * exchangeRate</span><br><span class="line">eurosInt = (dollars * exchangeRate).toInt</span><br><span class="line">exchangeRate.getClass</span><br><span class="line">dollars.getClass</span><br><span class="line">euros.getClass</span><br><span class="line">eurosInt.getClass</span><br><span class="line">println(<span class="string">f&quot;September 2023: $$<span class="subst">$dollars</span> = <span class="subst">$eurosInt</span> euros&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> record = <span class="string">&quot;2023-09-25:19:10:00, 12345678-aaaa-1000-gggg-000111222333, 58, TRUE, enabled, disabled, 37.819722,-122.478611&quot;</span></span><br><span class="line">record.length</span><br><span class="line">record.contains(<span class="string">&quot;disabled&quot;</span>)</span><br><span class="line">record.indexOf(&#x27;,&#x27;)</span><br><span class="line">record.toLowerCase.indexOf(<span class="string">&quot;true&quot;</span>)</span><br><span class="line">record</span><br><span class="line"><span class="keyword">var</span> record2 = record</span><br><span class="line">record == record2</span><br><span class="line">record2 = <span class="string">&quot;something else&quot;</span></span><br><span class="line">record == record2</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -mkdir loudacre</span><br><span class="line">hdfs dfs -mkdir loudacre/weblog</span><br><span class="line">//download 2014-03-15.log and upload it to nyu-dataproc-hdfs-ingest</span><br><span class="line">hadoop distcp gs://nyu-dataproc-hdfs-ingest/2014-03-15.log loudacre/weblog</span><br><span class="line">spark-shell --deploy-mode client</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> logfile: <span class="type">String</span> = <span class="string">&quot;/user/yz10317_nyu_edu/loudacre/weblog/2014-03-15.log&quot;</span></span><br><span class="line"><span class="keyword">val</span> originalRdd = sc.textFile(logfile)</span><br><span class="line">originalRdd.take(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">val</span> jpgRdd = originalRdd.filter(line =&gt; line.contains(<span class="string">&quot;jpg&quot;</span>))</span><br><span class="line">jpgRdd.take(<span class="number">5</span>)</span><br><span class="line">originalRdd.filter(line =&gt; line.contains(<span class="string">&quot;jpg&quot;</span>)).count()</span><br><span class="line"><span class="keyword">val</span> ipRdd = originalRdd.map(line =&gt; line.substring(<span class="number">0</span>, line.indexOf(&#x27;-&#x27;)<span class="number">-1</span>))</span><br><span class="line">ipRdd.saveAsTextFile(<span class="string">&quot;loudacre/iplist&quot;</span>)</span><br><span class="line">:q</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -ls loudacre/iplist</span><br><span class="line">hdfs dfs -cat loudacre/iplist/part-00000</span><br></pre></td></tr></table></figure><h1 id="Lab-3"><a href="#Lab-3" class="headerlink" title="Lab 3"></a>Lab 3</h1><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> data = sc.textFile(<span class="string">&quot;loudacre/devstatus/devicestatus.txt&quot;</span>)</span><br><span class="line"><span class="keyword">val</span> splitedData = data.map(line =&gt; line.split(line(<span class="number">19</span>)))</span><br><span class="line"><span class="keyword">val</span> filteredData = splitedData.filter(line =&gt; line.length == <span class="number">14</span>)</span><br><span class="line"><span class="keyword">val</span> extractedData = filteredData.map(line =&gt; <span class="type">Array</span>(line(<span class="number">0</span>), line(<span class="number">1</span>), line(<span class="number">2</span>), line(<span class="number">12</span>), line(<span class="number">13</span>)))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modify</span></span>(line: <span class="type">Array</span>[<span class="type">String</span>]) = &#123;</span><br><span class="line">line(<span class="number">1</span>) = line(<span class="number">1</span>).split(&#x27; &#x27;)(<span class="number">0</span>)</span><br><span class="line">line</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">val</span> modifiedData = extractedData.map(modify)</span><br><span class="line"><span class="keyword">val</span> finalData = modifiedData.map(line =&gt; line.mkString(<span class="string">&quot;,&quot;</span>))</span><br><span class="line">finalData.saveAsTextFile(<span class="string">&quot;loudacre/devstatus/devicestatus_etl&quot;</span>)</span><br></pre></td></tr></table></figure><h1 id="Lab-4"><a href="#Lab-4" class="headerlink" title="Lab 4"></a>Lab 4</h1><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> requestCountsRdd = (</span><br><span class="line">sc.textFile(<span class="string">&quot;loudacre/weblog/2014-03-15.log&quot;</span>)</span><br><span class="line">.map(_.split(&#x27; &#x27;)(<span class="number">2</span>).toInt -&gt; <span class="number">1</span>)</span><br><span class="line">.reduceByKey(_ + _)</span><br><span class="line">.sortByKey()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">requestCountsRdd.take(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> visitFrequencyRdd = (</span><br><span class="line">sc.textFile(<span class="string">&quot;loudacre/weblog/2014-03-15.log&quot;</span>)</span><br><span class="line">.map(_.split(&#x27; &#x27;)(<span class="number">2</span>).toInt -&gt; <span class="number">1</span>)</span><br><span class="line">.reduceByKey(_ + _)</span><br><span class="line">.map(_._2 -&gt; <span class="number">1</span>)</span><br><span class="line">.reduceByKey(_ + _)</span><br><span class="line">.sortByKey()</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">visitFrequencyRdd.collect()</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> userIpList = (</span><br><span class="line">sc.textFile(<span class="string">&quot;loudacre/weblog/2014-03-15.log&quot;</span>, <span class="number">4</span>)</span><br><span class="line">.map(line =&gt; line.split(&#x27; &#x27;)(<span class="number">2</span>).toInt -&gt; line.split(&#x27; &#x27;)(<span class="number">0</span>))</span><br><span class="line">.distinct()</span><br><span class="line">.groupByKey()</span><br><span class="line">.sortByKey()</span><br><span class="line">.mapValues(_.toArray)</span><br><span class="line">.map(tuple =&gt; tuple._1.toString + <span class="string">&quot;: &quot;</span> + tuple._2.mkString(<span class="string">&quot; &quot;</span>))</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">userIpList.saveAsTextFile(<span class="string">&quot;loudacre/useriplist&quot;</span>)</span><br><span class="line"></span><br><span class="line">:q</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -ls loudacre/useriplist</span><br><span class="line">hdfs dfs -cat loudacre/useriplist/part-00000 | head -5</span><br><span class="line">hdfs dfs -get loudacre/useriplist .</span><br><span class="line"></span><br><span class="line">./google-cloud-sdk/bin/gcloud init</span><br><span class="line">gcloud compute scp --recurse nyu-dataproc-m:~/useriplist ~</span><br></pre></td></tr></table></figure><h1 id="Lab-5"><a href="#Lab-5" class="headerlink" title="Lab 5"></a>Lab 5</h1><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scala.xml._</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> resultRdd = &#123;</span><br><span class="line">sc.wholeTextFiles(<span class="string">&quot;loudacre/activations/*.xml&quot;</span>) <span class="comment">// RDD[(String, String)]</span></span><br><span class="line">.map(x =&gt; <span class="type">XML</span>.loadString(x._2) \ <span class="string">&quot;activation&quot;</span>) <span class="comment">// RDD[scala.xml.NodeSeq]</span></span><br><span class="line">.flatMap(x =&gt; x) <span class="comment">// RDD[scala.xml.Node]</span></span><br><span class="line">.map(x =&gt; (x \ <span class="string">&quot;account-number&quot;</span>).text -&gt; (x \ <span class="string">&quot;model&quot;</span>).text)</span><br><span class="line">.map(x =&gt; x._1.toString + <span class="string">&quot;:&quot;</span> + x._2.toString)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resultRdd.saveAsTextFile(<span class="string">&quot;loudacre/account-models&quot;</span>)</span><br><span class="line">spark-submit --master yarn --<span class="class"><span class="keyword">class</span> <span class="title">AccountModel</span> <span class="title">lab5/target/scala-2</span>.12<span class="title">/accountmodel_2</span>.12<span class="title">-1</span>.0.0.<span class="title">jar</span></span></span><br></pre></td></tr></table></figure><h1 id="Lab-6"><a href="#Lab-6" class="headerlink" title="Lab 6"></a>Lab 6</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop distcp gs://nyu-dataproc-hdfs-ingest/iot_devices.json /user/yz10317_nyu_edu</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">DeviceIoTData</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="class">  battery_level: <span class="type">Long</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  co2_level: <span class="type">Long</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  cca2: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  cca3: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  cn: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  device_id: <span class="type">Long</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  device_name: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  humidity: <span class="type">Long</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  ip: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  latitude: <span class="type">Double</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  lcd: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  longitude: <span class="type">Double</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  scale: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  temp: <span class="type">Long</span>,</span></span></span><br><span class="line"><span class="params"><span class="class">  timestamp: <span class="type">Long</span></span></span></span><br><span class="line"><span class="params"><span class="class"></span>)</span></span><br><span class="line"><span class="keyword">val</span> ds = spark.read.json(<span class="string">&quot;iot_devices.json&quot;</span>).as[<span class="type">DeviceIoTData</span>]</span><br><span class="line">ds.printSchema</span><br><span class="line">ds.show(<span class="number">5</span>, <span class="literal">false</span>)</span><br><span class="line">ds.first()</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> failDevices = &#123;</span><br><span class="line">ds.select(<span class="string">&quot;device_id&quot;</span>, <span class="string">&quot;battery_level&quot;</span>)</span><br><span class="line">.where($<span class="string">&quot;battery_level&quot;</span> === <span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line">failDevices.count()</span><br><span class="line">failDevices.show(<span class="number">5</span>, <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> co2Emission = &#123;</span><br><span class="line">ds.select(<span class="string">&quot;cn&quot;</span>,<span class="string">&quot;co2_level&quot;</span>)</span><br><span class="line">.groupBy(<span class="string">&quot;cn&quot;</span>)</span><br><span class="line">.agg(avg(<span class="string">&quot;co2_level&quot;</span>))</span><br><span class="line">.withColumnRenamed(<span class="string">&quot;avg(co2_level)&quot;</span>, <span class="string">&quot;average_co2_level&quot;</span>)</span><br><span class="line">.sort($<span class="string">&quot;average_co2_level&quot;</span>.desc)</span><br><span class="line">&#125;</span><br><span class="line">co2Emission.show(<span class="number">5</span>, <span class="literal">false</span>)</span><br></pre></td></tr></table></figure><h1 id="Lab-7"><a href="#Lab-7" class="headerlink" title="Lab 7"></a>Lab 7</h1><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> data = <span class="type">Seq</span>((<span class="string">&quot;Alice&quot;</span>, <span class="string">&quot;111-11-1111&quot;</span>), (<span class="string">&quot;Bob&quot;</span>, <span class="string">&quot;123-45-6789&quot;</span>), (<span class="string">&quot;Carol&quot;</span>, <span class="string">&quot;987-65-4321&quot;</span>))</span><br><span class="line"><span class="keyword">val</span> df = data.toDF(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;ssn&quot;</span>)</span><br><span class="line">df.show()</span><br><span class="line"></span><br><span class="line">df.createOrReplaceTempView(<span class="string">&quot;users&quot;</span>)</span><br><span class="line">spark.sql(<span class="string">&quot;SELECT * FROM users&quot;</span>).show()</span><br><span class="line"></span><br><span class="line"><span class="keyword">val</span> hide = (ssn: <span class="type">String</span>) =&gt; &#123; </span><br><span class="line"><span class="string">&quot;***-**-&quot;</span>.concat(ssn.substring(<span class="number">7</span>, <span class="number">11</span>))</span><br><span class="line">&#125;</span><br><span class="line">spark.udf.register(<span class="string">&quot;hide&quot;</span>, hide)</span><br><span class="line">spark.sql(<span class="string">&quot;SELECT name, hide(ssn) As ssn FROM users&quot;</span>).show()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/09/28/hello-world/"/>
    <url>/2024/09/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
